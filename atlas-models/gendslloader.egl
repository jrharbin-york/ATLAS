[% out.setContentType("Java"); %]

[* Generate the components layer first *]
public class GeneratedDSLLoader implements DSLLoader {
	public Mission loadMission() {
	[% for (r in C!Robot.allInstances) { %]
		Robot r = new Robot("[%= r.name %]");
		[* Extract the necessary properties for r
		// Set the properies for r *]
		[% for (p in r.componentProperties) { %]
			[% if (p.isKindOf(IntProperty)) { %]
		r.setIntComponentProperty("[%= p.name %]", [%= p.value %]);
			[% } %]
			[% if (p.isKindOf(DoubleProperty)) { %]
		r.setDoubleComponentProperty("[%= p.name %]", [%= p.value %]);
			[% } %]
			[% if (p.isKindOf(PointProperty)) { %]
[*			[% p_x = p.value.x; p_y = p.value.y; p_z = p.value.z; %] *]
		r.setPointComponentProperty("[%= p.name %]", new Point([%= p.value.x %],[%= p.value.y %],[%= p.value.z %]));
		[* TODO: better way of doing point conversion here? *]
			[% } %]
		[% } %]
		
		[* Add subcomponents to the robots *]
		[% for (subc in r.subcomponents) { %]
		[* TODO: need to handle other types of subcomponents, actuators etc *]
			[% if (subc.isKindOf(Sensor)) { %]
				Sensor s = new Sensor(SensorType."[%= subc.type %]");
				[* set subcomponent properties here *]
				[% for (sp in subc.componentProperties) { %]
				[* TODO: factor this property pocessing into a subroutine call? *]
					[% if (sp.isKindOf(IntProperty)) { %]
						s.setIntComponentProperty("[%= sp.name %]", [%= sp.value %]);
					[% } %]
					[% if (sp.isKindOf(DoubleProperty)) { %]
						s.setDoubleComponentProperty("[%= sp.name %]", [%= sp.value %]);
					[% } %]
				[% } %]
				r.addSubcomponent(s);
			[% } %]
		[% } %]
			
		[* Add the robot to the mission *]
		mission.addRobot(r);
	[%} %]
	}
}