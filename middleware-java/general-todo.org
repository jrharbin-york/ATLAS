* DONE Have the requests from MOOS flowing over ActiveMQ to the CI - CI custom hooks are being called

* DONE pShare/nodebroker/nodecomms need to be set up to see vehicles on pMarineViewer
* DONE Helm is coming up in the state MALCONFIG - crashes approximately 12.5 seconds later? Behaviour problems?
  CLOSED: [2020-01-07 Tue 18:55]

* DONE Read through the proposal again and check I'm on the right track
* TODO CI code generator - how does it have to be structured, one CI class per robot? Check with Nikos
* DONE Generate a superclass per robot and subclass for each particular robot identity - allowing
  CLOSED: [2020-01-29 Wed 00:38]
behaviour customisation per individual robots
* DONE Also a CI class for the shoreside
  CLOSED: [2020-01-29 Wed 00:38]
** TODO CI hooks - need to define how the CI will operate - e.g. what calls can it make?
*** Just for now send MOOS commands directly

* DONE Middleware has to convert MOOS notifications into an general ATLAS form - SensorDetection or GPSPositionLocation
  CLOSED: [2020-01-30 Thu 15:13]
* TODO MOOS topologies have to contain position sensor component - to report to the CI as a sensor - 
       for now I have converted it so the true robot position updates from MOOS are reported to the CI as notifications
* DONE Draw a full diagram interpretation
* TODO Assumptions that are hardcoded into the MOOS code generation have to be checked
* DONE Proper object serialisation between the middleware and CI
  CLOSED: [2020-01-30 Thu 16:43]
* TODO CI behaviour layer to specify the CI responses independently - for now the developer can inject MOOS var changes directly
* TODO Threading behaviour with a central queue for receptions from the MOOS side
* TODO MOOS-specific side of middleware needs to be "lifted" to use generated code

* DONE Error report from deserialising on the CI side - not a valid field?
  CLOSED: [2020-02-03 Mon 14:24] - worked around with changes to jackson to ignore extra fields
DEBUG: deserialise - className = atlassharedclasses.SonarDetection raw json = {"robotName":"ella"}
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "robotName" (class atlassharedclasses.SonarDetection), not marked as ignorable (0 known properties: ])
 at [Source: (String)"{"robotName":"gilda"}"; line: 1, column: 15] (through reference chain: atlassharedclasses.SonarDetection["robotName"])
handleMessage caught: atlassharedclasses.ATLASObjectMapper$ATLASFormatError
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:840)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1206)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1592)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1570)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3173)
	at atlassharedclasses.ATLASObjectMapper.deserialise(ATLASObjectMapper.java:40)
	at atlascollectiveintgenerator.CollectiveIntActiveMQConsumer.handleMessage(CollectiveIntActiveMQConsumer.java:42)
	at atlascollectiveintgenerator.CollectiveIntActiveMQConsumer.run(CollectiveIntActiveMQConsumer.java:79)
	at atlascollectiveintgenerator.CollectiveInt.startCI(CollectiveInt.java:22)
	at atlascollectiveintgenerator.runner.CollectiveIntRunner.main(CollectiveIntRunner.java:9)
atlassharedclasses.ATLASObjectMapper$ATLASFormatError
	at atlassharedclasses.ATLASObjectMapper.deserialise(ATLASObjectMapper.java:44)
	at atlascollectiveintgenerator.CollectiveIntActiveMQConsumer.handleMessage(CollectiveIntActiveMQConsumer.java:42)
	at atlascollectiveintgenerator.CollectiveIntActiveMQConsumer.run(CollectiveIntActiveMQConsumer.java:79)
	at atlascollectiveintgenerator.CollectiveInt.startCI(CollectiveInt.java:22)
	at atlascollectiveintgenerator.runner.CollectiveIntRunner.main(CollectiveIntRunner.java:9)


* TODO Need to get the CI implemented for next week
** DONE Collective intelligence logging in CILog 
   CLOSED: [2020-02-03 Mon 15:29]
** DONE Ensure the CI code is backed up regularly to Github to avoid deletion
   CLOSED: [2020-02-04 Tue 16:32]
** TODO How to handle the robot definitions in the CI - for now, they are just encoded with the identity as assumed in the test case
** DONE Reverse channel from the CI to MOOSDB for variable updates
   CLOSED: [2020-02-04 Tue 18:03]
** TODO Change the topic so the CI can communicate directly with the relevant MOOSDB for now
** TODO Timers for the CI - for now, the timers will be triggered at the next event polling
** TODO Need to exclude any robots which are currently confirming from participating in the confirmation
** TODO Check with Simos about an algorithm for the coverage/just a simple rectangle for now
* TODO Generate a stub loader using EGL which produces the Java objects
* TODO Metamodels for the other languages
* TODO Obtaining the time from the DB updates? - ensuring causality is respected
* DONE Polygon coords list sent to MOOS is empty - why? - fixed by rewriting the polygon generator code
  CLOSED: [2020-02-07 Fri 14:26]

