@namespace(uri="http://www.github.com/jrharbin-york/atlas-middleware/dsl/simmapping", prefix="simmapping")
package Simmapping;

import "http://www.github.com/jrharbin-york/atlas-middleware/dsl/message";

enum VariableDirection {
	INBOUND = 1;
	OUTBOUND = 2;
}

enum BasicVariableType {
	CUSTOM = 1;
	STRING = 2;
	DOUBLE = 3;
}

abstract class VariableType {
}

// Info for the grammar
class SimpleVariableType extends VariableType {
	attr BasicVariableType vt;
}

class ConstantType {
	attr String constant;
}

class RegexpVariableType extends VariableType {
	attr String regexp;
} 

class GrammarVariableType {
	val VariableType[*] subtypes;
}

abstract class FuzzingNature {
	
}

class BinaryFuzzing extends FuzzingNature {
}

class CustomConfigurationFuzzing extends FuzzingNature {
	// Specify how to perform the fuzzing
	// Class name in the custom model
}

// How to specify the information

class FuzzingComponent {
    attr String name;
    attr String componentRelativePath; // relative to the base
}

class VariableSpecification {
	ref FuzzingComponent[1] component;
	attr String variable;
	attr String reflectionName; // This may be optional
	val VariableType vtype;
	attr VariableDirection dir;
 	val FuzzingNature nature;
}

class Simulator {
	attr String name;
	attr String baseDirectory;
	val VariableSpecification[*] vars;
	val FuzzingComponent[*] components;
}

class TopologySpecification {
	val Simulator[1] sim;
	val Atlas.Message[1] msg;
	// The variables that are involved
	val VariableSpecification[*] specs;
}

class VariableMappings {
	val Simulator[*] sims;
}

